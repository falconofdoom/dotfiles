
dispr() { cat "src/main/resources/$1"; }
mvnbr() { 

    if [ $# -lt 2 ]; then
		mvn spring-boot:run -Dspring-boot.run.profiles=$1;
        return 1
    fi

    if [ $# -eq 2 ]; then
		mvn spring-boot:run -Dspring-boot.run.profiles=$1 -Dspring-boot.run.arguments=--server.port=$2;
		return 1
    fi

    if [ $# -gte 3 ]; then
        echo "Error!!!! $#/2 of arguments supplied"
		return 0
    fi
}

mvndb() { mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=$1 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"; }
mvndbs() { mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=$1 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"; }
toggle-spring-prof() { SPRING_PROFILES_ACTIVE=$1; export SPRING_PROFILES_ACTIVE; }
disp-spring-prof() { printenv | grep SPRING; }
bcalc () { MAX_PRECISION=20; bc <<< "scale=$MAX_PRECISION; scale = scale($@); $@"; }
edate() { TZ=":Etc/GMT" date -d @$(bcalc $1 / 1000); }
chex() { 

    if [ $# -lt 2 ]; then
        echo "Error!!!! $#/2 of arguments supplied"
        return 0
    fi

    for file in *.$1; do
        mv "${file}" "${file%.$1}.$2"
    done
}

# Make directory then cd to it
mkcd () {
	mkdir $1; 
	cd $1;
}

docker-fremove() {
	sudo docker stop $1 && sudo docker rm $1;
}

is_merge_conflict() {
	
	if [[ -z "$1" ]]; then echo "Please provide feature branch"; return 0; else feature_branch=$1; fi
	if [[ -z "$2" ]]; then echo "Please provide main branch"; return 0; else main_branch=$2; fi

	git checkout $feature_branch
	git format-patch $main_branch --stdout | git apply --check
}

mvnbrcl() { 

    if [ $# -lt 2 ]; then
        mvn spring-boot:run -Dspring-boot.run.arguments=--spring.config.location=$1;
        return 1
    fi

    if [ $# -eq 2 ]; then
        mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=$2:--spring.config.location=$1;
        return 1
    fi

    if [ $# -gte 3 ]; then
        echo "Error!!!! $#/2 of arguments supplied"
        return 0
    fi
}

mvndbscl() { mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dspring.config.location=$1 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"; }



replaceJsonField() { 
	uuid=$(uuidgen);
	jq ".$1=\"$uuid\"" $2 > "$uuid"; 
	mv "$uuid" "$2";
}


rcat() {
    if [ $# -lt 3 ]; then
        echo "Invalid usage!: Usage must be <RANGE_START> <RANGE_END> <FILE_NAME>"
        return 0
    fi

    sed -n "$1,$2 p" $3; 
}

bluetoothInterfaceRestart() {
    hciconfig hci0 down
    rmmod btusb
    modprobe btusb
    hciconfig hci0 up
}